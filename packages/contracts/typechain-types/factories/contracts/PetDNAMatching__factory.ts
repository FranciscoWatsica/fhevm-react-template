/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PetDNAMatching,
  PetDNAMatchingInterface,
} from "../../contracts/PetDNAMatching";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "petId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "available",
        type: "bool",
      },
    ],
    name: "BreedingStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "petId1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "petId2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "compatibilityScore",
        type: "uint8",
      },
    ],
    name: "MatchingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "petId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MatchingProfileCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "petId1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "petId2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "MatchingRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "petId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "PetRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_petId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_minHealthScore",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_temperamentPreference",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_maxAge",
        type: "uint256",
      },
    ],
    name: "createMatchingProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getOwnerPets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_petId",
        type: "uint256",
      },
    ],
    name: "getPetInfo",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "species",
        type: "string",
      },
      {
        internalType: "string",
        name: "breed",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "birthYear",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "petOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "availableForBreeding",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_petId",
        type: "uint256",
      },
    ],
    name: "getPetMatches",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "requestId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "petId1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "petId2",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "compatibilityScore",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isMatched",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "matchTime",
            type: "uint256",
          },
        ],
        internalType: "struct PetDNAMatching.MatchResult[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchingCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matchingProfiles",
    outputs: [
      {
        internalType: "uint256",
        name: "petId",
        type: "uint256",
      },
      {
        internalType: "euint8",
        name: "minHealthScore",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "temperamentPreference",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxAge",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerToPets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "petMatches",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "petId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "petId2",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "compatibilityScore",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isMatched",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "matchTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "species",
        type: "string",
      },
      {
        internalType: "string",
        name: "breed",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "birthYear",
        type: "uint256",
      },
      {
        internalType: "euint8",
        name: "healthScore",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "geneticMarker1",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "geneticMarker2",
        type: "bytes32",
      },
      {
        internalType: "euint16",
        name: "geneticMarker3",
        type: "bytes32",
      },
      {
        internalType: "euint8",
        name: "temperament",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "availableForBreeding",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "registrationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "healthSum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "temperamentDiff",
        type: "uint8",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "processMatchingResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_species",
        type: "string",
      },
      {
        internalType: "string",
        name: "_breed",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_birthYear",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_healthScore",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "_geneticMarker1",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_geneticMarker2",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_geneticMarker3",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_temperament",
        type: "uint8",
      },
    ],
    name: "registerPet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_petId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_petId2",
        type: "uint256",
      },
    ],
    name: "requestMatching",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_petId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_available",
        type: "bool",
      },
    ],
    name: "setBreedingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCost",
        type: "uint256",
      },
    ],
    name: "setMatchingCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610171575f6060610014610175565b828152826020820152826040820152015261002d610175565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703908282541617905566038d7ea4c6800060025533905f5416175f55600180556001600855604051611fc190816101a98239f35b5f80fd5b60405190608082016001600160401b0381118382101761019457604052565b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816310e1f74f1461193e5750806313099c5c146119215780633c40406c146112bd5780633ccfd60b1461126b578063403f8cc71461124d578063558565b214611122578063625ff57b14610a0f57806369c3f31614610941578063793cb79c1461068c57806380f03fa61461064d578063828cd8b1146105d55780638da5cb5b146105ae5780639e0a1b7f14610558578063c464335814610529578063c5feea2d14610389578063cfb869bf1461027a578063d94e8ae2146101c8578063da1f12ab146101ab5763e0f3270e146100ef575f80fd5b346101a85760403660031901126101a857600435602435801515908181036101a4577fc67d4228515fe50965ecb8849023f34d663800b3578146631aabe1509453df889161019a6020928587526003845261015a60018060a01b03600160408a200154163314611d40565b8587526003845261017460ff600b60408a20015416611c0f565b85875260038452600b60408820019061ff00825491151560081b169061ff001916179055565b604051908152a280f35b8380fd5b80fd5b50346101a857806003193601126101a85760206040516127118152f35b50346101a857602080600319360112610276576001600160a01b036101eb611b0a565b168252600481526040822060405192838383549182815201908193835284832090835b81811061026257505050846102249103856119e4565b60405193838594850191818652518092526040850193925b82811061024b57505050500390f35b83518552869550938101939281019260010161023c565b82548452928601926001928301920161020e565b5080fd5b50346101a85760203660031901126101a8576004358152600360205260409020805460018201546001600160a01b0316916102b760028201611b6d565b6102c360038301611b6d565b916102d060048201611b6d565b9260058201549360068301546007840154600885015491600986015493600a87015495600b88015497600c0154986040519c8d9c8d6101c092839282526020820152604001528c0161032191611a88565b8b810360608d015261033291611a88565b8a810360808c015261034391611a88565b9760a08a015260c089015260e088015261010087015261012086015261014085015260ff8116151561016085015260081c60ff1615156101808401526101a08301520390f35b50346101a85760803660031901126101a8576004356103a6611a68565b60ff6103b0611a78565b9183855260036020526103d360018060a01b036001604088200154163314611d40565b83855260036020526103ed82600b60408820015416611c0f565b1690606482116104e45760ff1690600a821161049f5761046e6104769284865260056020526104326104256040882094878655611e55565b9160018501928355611e55565b9260028101938455606435600382015560048101600160ff1982541617905560054291015561046381543090611efb565b61046e308454611efb565b339054611efb565b33907f61830eee224d15b80235fa862fe450be39b5434bf376e16ff21ac6eca4a00dd58380a380f35b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642074656d706572616d656e7420707265666572656e636500006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d696e206865616c74682073636f726500000000000000006044820152606490fd5b50346101a85760203660031901126101a85761054f60018060a01b038254163314611c72565b60043560025580f35b50346101a85760403660031901126101a857610572611b0a565b6001600160a01b03168152600460205260408120805460243592908310156101a85760206105a08484611b20565b90546040519160031b1c8152f35b50346101a857806003193601126101a857546040516001600160a01b039091168152602090f35b50346101a8576105e4366119a0565b919081526006602052604081209081548310156101a85760c06106078484611add565b5080549060ff6001820154916002810154600460038301549201549360405195865260208601526040850152818116606085015260081c161515608083015260a0820152f35b50346101a857806003193601126101a8576001545f1981019190821161067857602082604051908152f35b634e487b7160e01b81526011600452602490fd5b50346101a85760803660031901126101a857600435906106aa611a68565b916106b3611a78565b906064356001600160401b039283821161093d573660238301121561093d5760249160048101356106e381611ac6565b956106f160405197886119e4565b8187528460208098019260051b8401019236841161093957858101925b8484106108fe575050505050828552600784526040852054906fffffffffffffffffffffffffffffffff8260801c921692869760ff988980921660a08110155f146108c35750166032018881116108af578890925b166002811161082457505084600796976107a56107a07fe4ea5649ac4d25ae9423113decd7aebf8e060eeb358a765e356a47ebd672a98794611d7c565b611d8e565b6064818316111561081f575060645b1661080c6040516107c4816119c9565b8781528584820152866040820152826060820152604683101560808201524260a0820152858b52600684526107fc8160408d20611caf565b868b526006845260408b20611caf565b604051908152a38352525f604082205580f35b6107b4565b60041061085e575084600796976107a56107a07fe4ea5649ac4d25ae9423113decd7aebf8e060eeb358a765e356a47ebd672a98794611d8e565b908716600a019087821161089c575084600796976107a57fe4ea5649ac4d25ae9423113decd7aebf8e060eeb358a765e356a47ebd672a98793611d8e565b634e487b7160e01b5f9081526011600452fd5b50634e487b7160e01b5f9081526011600452fd5b608c81106108df5750166028018881116108af57889092610763565b6078116108f5576108ef90611d7c565b92610763565b50601492610763565b83358381116109355782013660438201121561093557899161092a8392369060448c8201359101611a05565b81520193019261070e565b8a80fd5b8880fd5b8480fd5b50346101a85760203660031901126101a85760406109dd91600435808252600360205261097660ff600b858520015416611c0f565b815260036020522060058101546001820154600b83015460081c60ff16906001600160a01b03166109f96109ac60028601611b6d565b946109eb6109c860046109c160038501611b6d565b9301611b6d565b9160405198899860c08a5260c08a0190611a88565b9088820360208a0152611a88565b908682036040880152611a88565b9260608501526080840152151560a08301520390f35b50346101a8576101203660031901126101a8576004356001600160401b03811161027657610a41903690600401611a4a565b906024356001600160401b03811161027657610a61903690600401611a4a565b916044356001600160401b03811161111e57610a81903690600401611a4a565b926084359060ff8216820361111a5761ffff60a435818116810361111a5760c43591808316830361111a5760e43590808216820361111a57610104359260ff8416840361111a57606460ff8816116110de57600a60ff851611611099576107e860643511158061108b575b156110515760015496610afe88611c50565b600155878a52600360205260408a2096888855336bffffffffffffffffffffffff60a01b60018a01541617600189015589516001600160401b038111610f8457610b4b60028a0154611b35565b601f811161100d575b50806020601f8211600114610fa3578d91610f98575b508160011b915f199060031b1c19161760028901555b8051906001600160401b038211610f84578190610ba060038b0154611b35565b601f8111610f34575b50602090601f8311600114610ec6578d92610ebb575b50508160011b915f199060031b1c19161760038801555b8a516001600160401b038111610dca57610bf36004890154611b35565b9b601f8d11610e73575b8b899a9b9c9d50989798506020908d601f8411600114610de9578660ff966006610c7989610ca0998f8a879b610cae9f9a9b610c929c610c849b92610dde575b50508160011b915f199060031b1c19161760048201555b6064356005820155600b810161010161ffff19825416179055600c4291015516611e55565b9c019b8c5516611ea8565b9960078c019a8b5516611ea8565b9460088a0195865516611ea8565b936009880194855516611e55565b92600a8601938455338952600460205260408920805490600160401b821015610dca57610d8c97969593610d67610d81948b610cf586610d74966001809c99018155611b20565b819291549060031b91821b915f19901b1916179055610d1681543090611efb565b610d21308a54611efb565b610d2c308454611efb565b610d37308654611efb565b610d42308854611efb565b5497610d5a888060a01b03998a8a8d01541690611efb565b5488888b01541690611efb565b5486868901541690611efb565b5484848701541690611efb565b549201541690611efb565b7f3c0aadacdb910e58fe38928aad07e1b89dc0baee588d7ca1e9bba80e1e3f39646040516020815280610dc433956020830190611a88565b0390a380f35b634e487b7160e01b8b52604160045260248bfd5b015190505f80610c3d565b919060048a01835260208320925b601f1985168110610e5857508660ff966006610c7989610ca0998f60018b610cae9f9c9b899b610c849b610c929e601f19811610610e40575b505050811b016004820155610c54565b01515f1960f88460031b161c191690555f8080610e30565b8183015184558c9a5060019093019260209283019201610df7565b600489018c5260208c20601f830160051c810160208410610eb4575b601f8f5b0160051c82018110610ea6575050610bfd565b5f8155600101601f8f610e93565b5080610e8f565b015190505f80610bbf565b925060038a018d5260208d20908d935b601f1984168510610f19576001945083601f19811610610f01575b505050811b016003880155610bd6565b01515f1960f88460031b161c191690555f8080610ef1565b81810151835560209485019460019093019290910190610ed6565b90915060038a018d5260208d20601f840160051c810160208510610f7d575b90849392915b601f830160051c82018110610f6f575050610ba9565b5f8155859450600101610f59565b5080610f53565b634e487b7160e01b8c52604160045260248cfd5b90508b01515f610b6a565b915060028a018d5260208d208d925b8d601f1984168510610ff657506001935082601f19811610610fde575b5050811b016002890155610b80565b8d01515f1960f88460031b161c191690555f80610fcf565b810151825560209384019360019092019101610fb2565b60028a018d5260208d20601f830160051c81016020841061104a575b601f830160051c8201811061103f575050610b54565b5f8155600101611029565b5080611029565b60405162461bcd60e51b815260206004820152601260248201527124b73b30b634b2103134b93a34103cb2b0b960711b6044820152606490fd5b506107d06064351015610aec565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69642074656d706572616d656e742073636f7265000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206865616c74682073636f726560601b6044820152606490fd5b5f80fd5b8280fd5b50346101a857602090816003193601126101a8579060043582526006815260408220805461114f81611ac6565b9061115d60405192836119e4565b8082528382018093865284862086915b8383106111e857505050506040519280840191818552518092526040840192945b82811061119b5784840385f35b85518051855280830151858401526040808201519086015260608082015160ff169086015260808082015115159086015260a090810151908501529481019460c09093019260010161118e565b60058760019260409a9997989a516111ff816119c9565b85548152848601548382015260028601546040820152600386015460ff90818116606084015260081c1615156080820152600486015460a0820152815201920192019190969493959661116d565b50346101a857806003193601126101a8576020600154604051908152f35b50346101a857806003193601126101a8578080808060018060a01b03815416611295813314611c72565b47908282156112b4575bf1156112a85780f35b604051903d90823e3d90fd5b506108fc61129f565b506112c7366119a0565b9190805f526003926020918483526112e860ff600b60405f20015416611c0f565b815f5284835261130160ff600b60405f20015416611c0f565b60025434106118e5578181146118a057805f5284835260ff600b60405f20015460081c161561185d57815f5284835260ff600b60405f20015460081c161561181a57805f5284835260018060a01b0360019581600160405f2001541633148015611805575b156117c0576040516001600160401b039160608201838111838210176117ac5760405260028252868201906040368337855f52808852600660405f200154875f52600660405f20015491811561179c575b821561178c575b5f8a5f80516020611f6c8339815191529360648a86541691604051948593849263022f65e760e31b845260048401526024998a8401528160448401525af19081156116dd575f9161175f575b5085511561174c578452875f52895288600a60405f20015491895f52600a60405f200154831561173c575b888115611729575b606491925416935f60405195869485936303056db360e31b85526004850152888401528160448401525af19081156116dd575f916116fc575b508351600110156116e85760408401527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0094855490807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b1561111a575f6040518092637d6e912360e11b82528d60048301528183816114fb8a82018d611da0565b03925af180156116dd576116ca575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b15610935578a6040518092633263b83b60e01b8252846004830152606086830152818381611561606482018c611da0565b631e4f2de760e21b604483015203925af180156116bf57908b916116a7575b508190527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0190818a5260408b2054611695578a52885260408920925193841161168357600160401b84116116835750815483835580841061165c575b50908752858720875b83811061164b5788611645898989896115fe8154611c50565b9055600854855260078352818160801b1760408620557fb5d1b24160d14cc3246c9149be476010d84d63dc7ca95f424fd5f7790ee4984b60085493604051858152a3611c50565b60085580f35b8251828201559187019189016115e5565b8289528984898b2092830192015b8281106116785750506115dc565b5f8155018a9061166a565b634e487b7160e01b8952604160045288fd5b604051633f06d22b60e01b8152600490fd5b6116b0906119b6565b6116bb57895f611580565b8980fd5b6040513d8d823e3d90fd5b6116d5919b506119b6565b5f995f61150a565b6040513d5f823e3d90fd5b50634e487b7160e01b5f9081526032600452fd5b90508881813d8311611722575b61171381836119e4565b8101031261111a57515f611476565b503d611709565b60649150611735611dd3565b915061143d565b9250611746611dd3565b92611435565b83634e487b7160e01b5f5260326004525ffd5b90508a81813d8311611785575b61177681836119e4565b8101031261111a57515f61140a565b503d61176c565b9150611796611dd3565b916113be565b90506117a6611dd3565b906113b7565b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260048101869052601860248201527f4d757374206f776e206f6e65206f6620746865207065747300000000000000006044820152606490fd5b50835f523382600160405f2001541614611366565b6064836040519062461bcd60e51b825280600483015260248201527f5065742032206e6f7420617661696c61626c6520666f72206272656564696e676044820152fd5b6064836040519062461bcd60e51b825280600483015260248201527f5065742031206e6f7420617661696c61626c6520666f72206272656564696e676044820152fd5b60405162461bcd60e51b815260048101849052601c60248201527f43616e6e6f74206d6174636820706574207769746820697473656c66000000006044820152606490fd5b60405162461bcd60e51b8152600481018490526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b3461111a575f36600319011261111a576020600254604051908152f35b3461111a57602036600319011261111a5760c0906004355f52600560205260405f2080549060018101546002820154600383015491600560ff6004860154169401549486526020860152604085015260608401521515608083015260a0820152f35b604090600319011261111a576004359060243590565b6001600160401b0381116117ac57604052565b60c081019081106001600160401b038211176117ac57604052565b90601f801991011681019081106001600160401b038211176117ac57604052565b9291926001600160401b0382116117ac5760405191611a2e601f8201601f1916602001846119e4565b82948184528183011161111a578281602093845f960137010152565b9080601f8301121561111a57816020611a6593359101611a05565b90565b6024359060ff8216820361111a57565b6044359060ff8216820361111a57565b91908251928382525f5b848110611ab2575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a92565b6001600160401b0381116117ac5760051b60200190565b8054821015611af6575f52600560205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b600435906001600160a01b038216820361111a57565b8054821015611af6575f5260205f2001905f90565b90600182811c92168015611b63575b6020831014611b4f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611b44565b9060405191825f8254611b7f81611b35565b908184526020946001916001811690815f14611bed5750600114611baf575b505050611bad925003836119e4565b565b5f90815285812095935091905b818310611bd5575050611bad93508201015f8080611b9e565b85548884018501529485019487945091830191611bbc565b92505050611bad94925060ff191682840152151560051b8201015f8080611b9e565b15611c1657565b60405162461bcd60e51b815260206004820152601260248201527114195d081b9bdd081c9959da5cdd195c995960721b6044820152606490fd5b5f198114611c5e5760010190565b634e487b7160e01b5f52601160045260245ffd5b15611c7957565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b8054600160401b8110156117ac57611ccc91600182018155611add565b919091611d2d5760a0816004925184556020810151600185015560408101516002850155611d266003850160ff60608401511660ff198254161781556080830151151561ff00825491151560081b169061ff001916179055565b0151910155565b634e487b7160e01b5f525f60045260245ffd5b15611d4757565b60405162461bcd60e51b815260206004820152600d60248201526c2737ba103832ba1037bbb732b960991b6044820152606490fd5b60ff601e9116019060ff8211611c5e57565b60ff60149116019060ff8211611c5e57565b9081518082526020808093019301915f5b828110611dbf575050505090565b835185529381019392810192600101611db1565b5f80516020611f6c83398151915254604051639cd07acb60e01b81525f60048201819052600260248301529091602091839160449183916001600160a01b03165af19081156116dd575f91611e26575090565b90506020813d602011611e4d575b81611e41602093836119e4565b8101031261111a575190565b3d9150611e34565b5f80516020611f6c83398151915254604051639cd07acb60e01b8152600481019290925260026024830152602090829060449082905f906001600160a01b03165af19081156116dd575f91611e26575090565b5f80516020611f6c83398151915254604051639cd07acb60e01b8152600481019290925260036024830152602090829060449082905f906001600160a01b03165af19081156116dd575f91611e26575090565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b0392908316803b1561111a575f92836044926040519687958694635ca4b5b160e11b865260048601521660248401525af180156116dd57611f625750565b611bad906119b656fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701a2646970667358221220af3393ad5a497200d8bb16cbb88f1c9d6576bec58edbc0a68bfe82991fb886f264736f6c63430008180033";

type PetDNAMatchingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PetDNAMatchingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PetDNAMatching__factory extends ContractFactory {
  constructor(...args: PetDNAMatchingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PetDNAMatching & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PetDNAMatching__factory {
    return super.connect(runner) as PetDNAMatching__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PetDNAMatchingInterface {
    return new Interface(_abi) as PetDNAMatchingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PetDNAMatching {
    return new Contract(address, _abi, runner) as unknown as PetDNAMatching;
  }
}
